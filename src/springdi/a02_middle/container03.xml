<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd     
        http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
         http://www.springframework.org/schema/websocket
      http://www.springframework.org/schema/websocket/spring-websocket.xsd">
<!-- 
1. component scan을 통해 객체 컨테이너 로딩과
autowire설정.
	1) annotation으로 소스 안에서 autowiring 옵션 설정가능하게 
	2) component-scan으로 특정 패키지 기준 객체 컨테이너 메모리로딩
		type="regex"
	3) autowiring 설정.
	4) main()에서 객체 호출 속성값 설정 처리.
2. 객체가 없을 때, autowiring에 대한 문제
3. 여러개의 객체가 메모리에 로딩될 때, 처리 방법.
	
 -->
	<context:annotation-config/>
	<context:component-scan base-package="springdi.a02_middle.z01_vo">
		<context:include-filter type="regex" expression=".*"/>
	</context:component-scan>
</beans>