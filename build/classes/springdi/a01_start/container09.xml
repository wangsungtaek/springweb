<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd     
        http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
         http://www.springframework.org/schema/websocket
      http://www.springframework.org/schema/websocket/spring-websocket.xsd">
	
<!-- 
# 외부파일로 설정된 데이터 가져오기..
1. 특정한 property를 key=value으로 설정된 파일을
	java 코드상이나 컨테이너에서 활용할 수 있다.
2. 기본형식
	context:property-placeholder
		location="classpath:/특정한 경로의 파일명(src하위가 기준 폴드)
3. 경로파일
	key1=value
	key2=value
4. 컨테이너에서 호출
	${key} : 으로 호출하면 지정된 데이터가 할당 처리된다.
5. java code에서 활용
	@Value("${key}")
	String key;
	
로컬에서 개발환경 ==> 개발서버(was/DB/Unix운영/file서버)
	==> test서버(was/DB/Unix/file서버) ==> 운영서버(was/DB/Unix운영/file서버)
외부연계서버(email서버, ftp, telnet서버, 다른 웹서비스 연동)
# 필요정보
1. ip/port/id/pass/sid
2. 소스 내부에 위 정보들이 곳곳에 필요로 하는데, 이것을 서버가 변경이 될 때마다
	소스를 찾아서 변경하는 것보다. 특정 파일/DB에 key/value 형식으로 처리하는 것이
	효과적이다.
 -->
	<context:property-placeholder location="classpath:/springdi/a01_start/info"/>
	<bean name="p01" class="springdi.a01_start.z01_vo.Person">
		<!-- info 파일에 설정된 key=value의 key값을 설정하면 value값이 할당된다. -->
		<property name="name" value="${name}"/>
		<property name="age" value="${age}"/>
		<property name="loc" value="${loc}"/>
	</bean>
</beans>